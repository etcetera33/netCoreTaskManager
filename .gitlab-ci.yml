image: mcr.microsoft.com/dotnet/core/sdk:3.1.101-alpine

stages:
    - test
    - build

before_script:
    - cd src/Api/

build_api:
    stage: build
    only:
        - master
        - web
    image: docker:18-git
    services:
        - docker:18-dind
    before_script:
        - docker info
        - docker login dapracticepoliit.azurecr.io -u ${AZURE_REGISTRY_USER} -p ${AZURE_REGISTRY_PASSWORD}
    script:
        - docker build -f ./Api/Dockerfile -t ${AZURE_REGISTRY}/api:latest .
        - docker push ${AZURE_REGISTRY}/api:latest
    after_script:
        - docker logout ${AZURE_REGISTRY}

build_entity_observer_service:
    stage: build
    only:
        - master
        - web
    image: docker:18-git
    services:
        - docker:18-dind
    before_script:
        - docker info
        - docker login dapracticepoliit.azurecr.io -u ${AZURE_REGISTRY_USER} -p ${AZURE_REGISTRY_PASSWORD}
    script:
        - docker build -f ./EntitiesObserver/Dockerfile -t ${AZURE_REGISTRY}/entity-observer-service:latest .
        - docker push ${AZURE_REGISTRY}/entity-observer-service:latest
    after_script:
        - docker logout ${AZURE_REGISTRY}

build_notification_service:
    stage: build
    only:
        - master
        - web
    image: docker:18-git
    services:
        - docker:18-dind
    before_script:
        - docker info
        - docker login dapracticepoliit.azurecr.io -u ${AZURE_REGISTRY_USER} -p ${AZURE_REGISTRY_PASSWORD}
    script:
        - docker build -f ./NotificationService/Dockerfile -t ${AZURE_REGISTRY}/notification-service:latest .
        - docker push ${AZURE_REGISTRY}/notification-service:latest
    after_script:
        - docker logout ${AZURE_REGISTRY}

build_front:
    stage: build
    only:
        - master
        - web
    image: docker:18-git
    services:
        - docker info
        - docker:18-dind
    before_script:
        - cd ..
        - cd Ui
        - docker login dapracticepoliit.azurecr.io -u ${AZURE_REGISTRY_USER} -p ${AZURE_REGISTRY_PASSWORD}
    script:
        - docker build -f ./Dockerfile -t ${AZURE_REGISTRY}/front:latest .
        - docker push ${AZURE_REGISTRY}/front:latest
    after_script:
        - docker logout ${AZURE_REGISTRY}
        - cd ..
        - cd Api

test_services:
    stage: test
    only:
        - master
        - web
    #before_script:
    #    - cd NotificationService.Tests/
    script:
        - dotnet test Services.Tests/.
    #after_script:
    #    - cd ..

test_entity_observer:
    stage: test
    only:
        - master
        - web
    script:
        - dotnet test EntitiesObserver.Tests/.

test_notification_service:
    stage: test
    only:
        - master
        - web
    script:
        - dotnet test NotificationService.Tests/.